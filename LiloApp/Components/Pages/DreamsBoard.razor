@page "/dreams-board"

@inject LiloApp.Services.NavigatorService NavigatorService
@inject LiloApp.ViewModels.MainViewModel ViewModel
@using LiloApp.Data

<div class="mt-20">

    <h1 class="text-5xl font-medium mb-16 text-center mx-10 select-none">Calendario de sueños</h1>

    @if (petSelected != null)
    {
        <div class="relative">
            <img src=@($"/images/calendar_pixelart.png") class="m-auto block my-16 select-none w-20 absolute inset-0 -top-24 -left-20 -z-1" />
            <img src=@($"/images/{petSelected.Animal}_pixelart.png") class="m-auto block my-16 select-none relative z-1" />
        </div>
    }

    <div class="mt-10">
        <h3 class="text-3xl font-medium my-4 select-none">¿Sabías qué?</h3>

        <p class="text-left text-[16px] leading-5 select-none">
            Los calendarios de sueños son una herramienta poderosa para visualizar y alcanzar tus objetivos? También conocidos como tableros de visión. Al colocar tus metas en lugares visibles, estimulas tu mente subconsciente, manteniendo tus aspiraciones en el foco de tu atención diaria. La creación de un calendario de sueños no solo te motiva, sino que también te ayuda a clarificar y concretar tus intenciones, facilitando el camino hacia la realización de tus sueños.
        </p>

        <div class="px-6">
            <NavLink href="/dreams-board/list" class="block relative p-[0.7em] text-lg mt-8">
                <svg class="button__shape w-full" viewBox="0 0 100 100" preserveAspectRatio="none" aria-hidden="true">
                    <path class="button__path" d="M0,0 C0,-5 100,-5 100,0 C105,0 105,100 100,100 C100,105 0,105 0,100 C-5,100 -5,0 0,0 z" />
                </svg>
                <span class="block relative text-center text-white">
                    Completar mis sueños
                </span>
            </NavLink>
        </div>
    </div>
</div>

@code {
    private PetData petSelected { get; set; }

    protected override void OnInitialized()
    {
        NavigatorService.NavigateTo("DreamsBoardPage");
    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadDataAsync();

        if (ViewModel != null && ViewModel.Owners != null && ViewModel.Pets != null)
        {
            petSelected = ViewModel.Pets.Count == 0 ? null : ViewModel.Pets.First();
        }
    }
}
