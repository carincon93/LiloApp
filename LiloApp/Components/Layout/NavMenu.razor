@inject LiloApp.Services.NavigatorService NavigatorService
@inject IServiceProvider ServiceProvider
@inject LiloApp.ViewModels.MainViewModel ViewModel

<div class="@(NavigatorService.CurrentPage == "WorkoutPage" || NavigatorService.CurrentPage == "DreamsBoardPage" || NavigatorService.CurrentPage == "EnglishPage" ? "hidden" : "")">
    <div class="p-2 relative z-[9999] flex items-center justify-between select-none">
        <div class="text-left leading-6 text-[20px] @(NavigatorService.CurrentPage == "DreamsBoardListPage" || NavigatorService.CurrentPage == "DreamPage" ? "text-white" : "")">
            <small>¡Hola!</small>
            <br />
            @if (Nombre != "")
            {
                <strong>@Nombre</strong>
            }
        </div>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="size-10 @(NavigatorService.CurrentPage == "DreamsBoardListPage" || NavigatorService.CurrentPage == "DreamPage" ? "text-white" : "text-purple-500")" @onclick="TogglePopup">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
    </div>
</div>

@if (isPopupVisible)
{
    <div class="fixed inset-0 backdrop-blur-sm bg-white/30 flex items-center justify-center z-[10000]">
        <div class="bg-white rounded-2xl shadow-lg w-9/12">

            <div class="p-3 flex justify-between">
                <span></span>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6" @onclick="TogglePopup">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                </svg>
            </div>

            <div class="px-6 py-2 flex bg-gray-100">
                <div>
                    <img src="/images/pig_pixelart.png" class="w-14 mx-auto" />

                    @if (petSelected != "")
                    {
                        <img src=@($"/images/{petSelected}_pixelart.png") class="w-10 mt-2 mx-auto select-none" />
                    }
                </div>
                <div class="flex flex-col justify-center">
                    <p class="text-left ml-6 leading-4 -mt-1"><strong>10x</strong><br /> Cerditos completados</p>
                    <p class="text-left ml-6 mt-8">¡Tengo hambre!</p>
                </div>
            </div>
            <hr />
            <div class="p-6">
                <NavLink href="/" @onclick="TogglePopup">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 mx-auto">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
                    </svg>
                </NavLink>
            </div>
        </div>
    </div>
}

@code {
    private bool isPopupVisible = false;
    private string Nombre { get; set; } = "Cargando";
    private string petSelected { get; set; }

    protected override void OnInitialized()
    {
        NavigatorService.OnPageChanged += UpdateState;
    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadDataAsync();

        if (ViewModel != null && ViewModel.Amos != null && ViewModel.Mascotas != null)
        {
            Nombre = ViewModel.Amos.Count == 0 ? "" : ViewModel.Amos.First().Nombre;
            petSelected = ViewModel.Mascotas.Count == 0 ? "" : ViewModel.Mascotas.First().Animal;
        }
    }

    private void UpdateState()
    {
        InvokeAsync(() => StateHasChanged());
    }

    public void Dispose()
    {
        NavigatorService.OnPageChanged -= UpdateState;
    }

    private void TogglePopup()
    {
        isPopupVisible = !isPopupVisible;
    }
}